% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolation.R
\name{interpolation}
\alias{interpolation}
\title{Interpolate USCRN station data to grid points within the contiguous USA}
\usage{
interpolation(formula, data, X_pred = NULL, resolution = 100)
}
\arguments{
\item{formula}{an object of class [stats::formula()], in the format \code{value ~ LONGITUDE + LATITUDE + ...}}

\item{data}{an optional data frame containing the variables in the model.}

\item{X_pred}{an optional design matrix of covariates for predictions, to be passed to [GpGp::predictions()].}

\item{resolution}{numeric value for grid resolution, to be passed to [rustcrn::grid_points_usa()].}
}
\value{
A data frame of predictions corresponding longitude and latitude
\itemize{
\item \code{long} Longitude in decimal degrees
\item \code{lat} Latitude in decimal degrees
\item \code{in_usa} numeric 1 if the point is in the contiguous USA, 0 otherwise
\item \code{prediction} predicted values at \code{(long, lat)} based on GpGp interpolation
}
}
\description{
Create a matrix containing predictions generated by a GpGp interpolation on
grid points at \code{resolution} based on a formula \code{formula}. Because
of GpGp limitations, the minimum number of rows in \code{data} is 31.
}
\details{
The formula should be in the format \code{value ~ LONGITUDE + LATITUDE + ...},
where \code{value} is the column of values to be interpolated over,
\code{LONGITUDE} and \code{LATITUDE} are the corresponding coordinates for
each value, and \code{...} are additional columns for covariates.

If covariates are included, \code{X_pred} should be provided, containing a
design matrix to be passed to [GpGp::predictions()]. The matrix should be
in the same order as the formula.

See [rustcrn::grid_points_usa()], [GpGp::predictions()] for more information
on how the grid and interpolation is generated.
}
\examples{
# Interpolation of every other station at resolution of 50
other <- rustcrn::stations[seq(2, nrow(rustcrn::stations), by = 2),]
value_other <- temp_trend(other$WBANNO)[,2]
int_other <- interpolation( value_other ~ LONGITUDE + LATITUDE, data = other,
                            resolution = 50 )
}
