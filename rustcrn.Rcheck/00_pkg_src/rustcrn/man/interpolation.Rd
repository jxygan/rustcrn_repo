% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolation.R
\name{interpolation}
\alias{interpolation}
\title{Interpolate USCRN station data to grid points within the contiguous USA}
\usage{
interpolation(value, stations = NULL, resolution = 100)
}
\arguments{
\item{value}{a vector of data corresponding to stations specified in \code{stations}}

\item{stations}{an optional numeric vector of station WBANNOs to use in interpolation}

\item{resolution}{numeric value for grid resolution}
}
\value{
A data frame of predictions corresponding longitude and latitude
\itemize{
\item \code{long} Longitude in decimal degrees
\item \code{lat} Latitude in decimal degrees
\item \code{in_usa} numeric 1 if the point is in the contiguous USA, 0 otherwise
\item \code{prediction} predicted values at \code{(long, lat)} based on GpGp interpolation
}
}
\description{
Create a matrix containing predictions generated by a GpGp interpolation on
grid points at \code{resolution}. By default, \code{value} accepts
non-NA values corresponding to stations in the same order as in [rustcrn::stations],
but stations can be subsetted by providing a vector of WBANNOs. Because of
GpGp limitations, the minimum number of values is 31.
}
\details{
See [rustcrn::grid_points_usa], [GpGp::predictions] for more information
on how the grid and interpolation is generated.
}
\examples{
# To get data frame of predicted estimated trend of temperature of USA with
# resolution 100
tt_all <- temp_trend(rustcrn::stations$WBANNO)
value  <- tt_all[, 2]
int_all <- interpolation( value )

# Interpolation of every other station at a lower resolution
other <- rustcrn::stations$WBANNO[seq(2, nrow(rustcrn::stations), by = 2)]
value_other <- temp_trend(other)[,2]
int_other <- interpolation( value_other, stations = other, resolution = 75 )
}
